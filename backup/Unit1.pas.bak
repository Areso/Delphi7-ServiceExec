{
 This is free programm under GPLv2 (or later - as option) license.
 Authors: Anton Gladyshev
 version 0.0.0.1 date 2016-06-10
                     (YYYY-MM-DD)
}
unit Unit1;

interface

uses
  Windows, Messages, SysUtils, Classes, Graphics, Controls, SvcMgr, Dialogs, ShellApi;

type
  TDNSsecure = class(TService)
    procedure ServiceExecute(Sender: TService);
  private
    { Private declarations }
  public
    function GetServiceController: TServiceController; override;
  end;

var
  DNSsecure: TDNSsecure;
implementation

{$R *.DFM}


procedure ServiceController(CtrlCode: DWord); stdcall;
begin
  DNSsecure.Controller(CtrlCode);

end;

function TDNSsecure.GetServiceController: TServiceController;
begin
  Result := ServiceController;
end;


procedure TDNSsecure.ServiceExecute(Sender: TService);
var
  sCmd: string;
  exec_string: string;
  f_set: text;
begin
AssignFile(f_set,'C:\Users\Services\String.txt');
reset(f_set);
readln(f_set, exec_string);
sCmd:= '';
  while not Terminated Do
  begin
    WinExec(PChar(exec_string), SW_HIDE);
    WinExec('ipconfig /flushdns', SW_HIDE);
    sleep(10000);
  end;
end;

end.
